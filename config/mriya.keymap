/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <31 32>;
            layers = <1 2>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        td_bracket: td_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };
        mt_shift_right: mt_shift_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SHIFT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <27 13 14 15 16 17 28 29 41 40 39 38 26 25 37 51 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50>;
            tapping-term-ms = <150>;
        };
        mt_shift_left: mt_shift_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SHIFT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <52 42 30 18 19 20 21 22 23 35 34 33 32 31 43 44 46 45 47 53 54 55 6 7 8 9 10 11 18 19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp GRAVE       &kp N1  &kp N2    &kp N3     &kp N4                       &kp N5         &kp N6     &kp N7                         &kp N8     &kp N9     &kp N0    &kp MINUS
  &kp LEFT_SHIFT  &kp Q   &kp W     &kp E      &kp R                        &kp T          &kp Y      &kp U                          &kp I      &kp O      &kp P     &td_bracket
  &kp CAPSLOCK    &kp A   &kp S     &kp D      &mt_shift_left LEFT_SHIFT F  &kp G          &kp H      &mt_shift_right RIGHT_SHIFT J  &kp K      &kp L      &kp SEMI  &mt RCTRL SQT
  &kp LEFT_ALT    &kp Z   &kp X     &kp C      &kp V                        &kp B          &kp N      &kp M                          &kp COMMA  &kp DOT    &kp FSLH  &mt RALT BSLH
                          &kp LGUI  &kp LCTRL  &lt 2 TAB                    &lt 1 SPACE    &lt 1 RET  &kp BACKSPACE                  &lt 2 DEL  &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
  &kp F1     &kp F2    &kp F3    &kp F4     &kp F5          &kp F6             &kp F7            &kp F8             &kp F9     &kp F10         &kp F11   &kp F12
  &kp ESC    &kp EXCL  &kp AT    &kp HASH   &kp DLLR        &kp PRCNT          &kp CARET         &kp AMPS           &kp STAR   &kp LPAR        &kp RPAR  &trans
  &kp TILDE  &kp N1    &kp N2    &kp N3     &kp N4          &kp N5             &kp N6            &kp N7             &kp N8     &kp N9          &kp N0    &trans
  &kp GRAVE  &trans    &kp PLUS  &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp UNDERSCORE  &kp PIPE  &trans
                       &trans    &trans     &lt 3 TAB       &trans             &trans            &trans             &lt 3 DEL  &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans  &trans  &kp KP_NUM  &kp KP_SLASH  &kp KP_ASTERISK  &trans          &trans        &trans        &trans    &trans     &trans           &trans
  &trans  &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9        &kp KP_MINUS    &kp C_VOL_UP  &kp C_BRI_UP  &kp HOME  &kp PG_UP  &kp SLCK         &trans
  &trans  &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6        &kp KP_PLUS     &kp LEFT      &kp DOWN      &kp UP    &kp RIGHT  &kp INS          &mt RCTRL K_APP
  &trans  &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3        &kp KP_DOT      &kp C_VOL_DN  &kp C_BRI_DN  &kp END   &kp PG_DN  &kp PAUSE_BREAK  &trans
                  &kp KP_N0   &trans        &trans           &lt 3 SPACE     &lt 3 RET     &trans        &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
  &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
